How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It is possible that you can introduce bugs when you modify a file. Viewing
    a diff can help on finding what exactly are changed, so that we can easily
    locate bugs. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    There are times when you need to go back to a previous version. In this
    case having easy access to the entire history of a file make you a more
    efficient programmer.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manual commit is very flexibale and you have great control over when to
    commit. However it puts more pressure on people because you have to 
    remember committing at the appropriate time.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Some files are interdependent to each other and are required as a whole for
    the system to function well. In this case we may need to modify multiple 
    files in one commit. Files in Google Docs are usually independent to each
    other therefore Google Docs treat each file separately.

How can you use the commands git log and git diff to view the history of files?

    Git log shows the history of recent commits with their commits id, commit 
    message. Once we find ids for two commits we can use git diff to compare
    what was changed between these two commmits.

How might using version control make you more confident to make changes that
could break something?

    Even if the new change I make break something, I could always go back to
    the previous version.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to try using Git for all my programming needs.
